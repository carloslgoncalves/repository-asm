#!/usr/bin/env pybricks-micropython
from pybricks.hubs import EV3Brick
from pybricks.ev3devices import (Motor, TouchSensor, ColorSensor, 
                                 InfraredSensor, UltrasonicSensor, GyroSensor)
from pybricks.parameters import Port, Stop, Direction, Button, Color
from pybricks.tools import wait, StopWatch, DataLog
from pybricks.robotics import DriveBase 
from pybricks.media.ev3dev import SoundFile, ImageFile
from pybricks.nxtdevices import TouchSensor
from pybricks.messaging import BluetoothMailboxClient, TextMailbox

ev3 = EV3Brick()

client = BluetoothMailboxClient()
mailbox = TextMailbox('greeting', client)

server_address = '38:81:D7:4B:0F:3B'
print("Connecting to server...")
client.connect(server_address)
print("Connected to server!")

# Write your program here.

ev3.speaker.beep()
gripper_motor = Motor(Port.A)

elbow_motor = Motor(Port.B, Direction.COUNTERCLOCKWISE, [8, 40])
base_motor = Motor(Port.C, Direction.COUNTERCLOCKWISE, [12, 36])

elbow_motor.control.limits(speed=60, acceleration=200)
base_motor.control.limits(speed=100, acceleration=200)

base_switch = TouchSensor(Port.S1)
Low_end_switch = TouchSensor(Port.S2)
High_end_switch = TouchSensor(Port.S3)






elbow_motor.run_time(-30, 1000)
elbow_motor.run(23)
while Low_end_switch.pressed() == False:
    wait(10)
elbow_motor.reset_angle(0)

elbow_motor.run_time(30, 1000)
elbow_motor.run(23)
while High_end_switch.pressed() == False:
    wait(10)
elbow_motor.reset_angle(0)
elbow_motor.hold()


while not base_switch.pressed():
    base_motor.run(-25)
base_motor.stop()
base_motor.reset_angle(0)
base_motor.hold()

gripper_motor.run_until_stalled(200, then=Stop.COAST, duty_limit=50)
gripper_motor.reset_angle(0)
gripper_motor.run_target(200, -90)
wait(2000)

def robot_pick(position):

    # Roda para a posição indicada
    base_motor.run_target(30, position)
    # Baixa o braço
    elbow_motor.run_target(20, -65)
    # Dechar a garra 
    gripper_motor.run_until_stalled(220, then=Stop.HOLD, duty_limit=50)
    # Levanta o braço
    elbow_motor.run_target(20, 0)


def robot_release(position):

    # Roda para a posição em que vai largar a bola
    base_motor.run_target(30, position)
    # Baixar um pouco o braço
    elbow_motor.run_target(20, -50)
    # Abrir a garra para largar a bola
    gripper_motor.run_target(120, -90)
    # Levantar o braço
    elbow_motor.run_target(20, 0)


for i in range(3):
    ev3.speaker.beep()
    wait(100)

# Posições
LEFT = 130
MIDDLE = 167
RIGHT = 20

message="e"


# Main loop to receive messages and perform actions
while True:
    mailbox.wait()
    message = mailbox.read()
    print("Received:", message)

    if message=="Bola":
        robot_pick(MIDDLE)
        robot_release(RIGHT)
        wait(2000)    
    else:
        wait(200)
   

